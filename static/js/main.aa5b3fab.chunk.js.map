{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/services/img-api.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","search","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","console","log","trim","props","onSubmit","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","onChange","Component","defaultProps","PropTypes","func","isRequired","ImageGalleryItem","webformatURL","largeImageURL","onClick","src","alt","ImageGalleryItemImage","prototype","string","ImageGallery","data","handleClickImg","map","id","arrayOf","shape","number","modalRoot","document","querySelector","Modal","handleKeyDown","code","handleBackdrop","target","window","addEventListener","removeEventListener","createPortal","Overlay","largeImg","apiFirst","fetchApi","nextQuery","nextPage","url","fetch","then","response","json","Button","handleButtonLoadMore","App","page","query","showModal","status","resetPage","handleFormSubmit","scrollTo","top","documentElement","scrollHeight","behavior","imgForModal","toggleModal","prevProps","prevState","prevQuery","prevPage","API","hits","length","color","height","width","timeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,iBAAmB,yC,mBCAvFD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,kD,mBCAxGD,EAAOC,QAAU,CAAC,OAAS,yB,gNCGrBC,E,4MAKJC,MAAQ,CACNC,OAAQ,I,EAIVC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,OAAQE,EAAEE,cAAcC,MAAMC,iB,EAKlCC,aAAe,SAACL,GACdA,EAAEM,iBAEF,IAAQR,EAAW,EAAKD,MAAhBC,OACRS,QAAQC,IAAIV,GAGU,KAAlBA,EAAOW,OAMX,EAAKC,MAAMC,SAASb,GALlBS,QAAQC,IAAI,8E,4CAQhB,WACE,OACE,wBAAQI,UAAWC,IAAEjB,UAArB,SACE,uBAAMgB,UAAWC,IAAEC,WAAYH,SAAUI,KAAKV,aAA9C,UACE,wBAAQW,KAAK,SAASJ,UAAWC,IAAEI,iBAAnC,SACE,sBAAML,UAAWC,IAAEK,sBAAnB,sBAGF,uBACEN,UAAWC,IAAEM,gBACbH,KAAK,OACLI,KAAK,SACLjB,MAAOY,KAAKlB,MAAMC,OAClBuB,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUT,KAAKhB,wB,GAjDH0B,aAAlB7B,EACG8B,aAAe,CACpBf,SAAUgB,IAAUC,KAAKC,YAuDdjC,Q,kCC1Df,SAASkC,EAAT,GAAqE,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,QACvD,OACE,qBACEC,IAAKH,EACLI,IAAKH,EACLpB,UAAWC,IAAEuB,sBACbH,QAASA,IAKfH,EAAiBO,UAAY,CAC3BN,aAAcJ,IAAUW,OAAOT,WAC/BG,cAAeL,IAAUW,OAAOT,WAChCI,QAASN,IAAUC,KAAKC,YAGXC,QCZf,SAASS,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,eAE5B,OADAlC,QAAQC,IAAIgC,GAEV,8BACE,oBAAI5B,UAAWC,IAAE0B,aAAjB,SACGC,EAAKE,KAAI,gBAAGC,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAArB,OACR,oBAAapB,UAAWC,IAAEiB,iBAA1B,SACE,cAAC,EAAD,CACEC,aAAcA,EACdC,cAAeA,EACfC,QAASQ,KAJJE,UAiBnBJ,EAAaF,UAAY,CACvBG,KAAMb,IAAUiB,QACdjB,IAAUkB,MAAM,CACdF,GAAIhB,IAAUmB,OAAOjB,WACrBE,aAAcJ,IAAUW,OAAOT,WAC/BG,cAAeL,IAAUW,OAAOT,aAC/BA,YAELY,eAAgBd,IAAUC,KAAKC,YAGlBU,Q,iBCrCTQ,EAAYC,SAASC,cAAc,eACnCC,E,4MAcJC,cAAgB,SAACnD,GACA,WAAXA,EAAEoD,OACJ7C,QAAQC,IAAI,+CAEZ,EAAKE,MAAMuB,Y,EAIfoB,eAAiB,SAACrD,GACZA,EAAEE,gBAAkBF,EAAEsD,SACxB/C,QAAQC,IAAI,iDAEZ,EAAKE,MAAMuB,Y,uDApBf,WACEsB,OAAOC,iBAAiB,UAAWzC,KAAKoC,iB,kCAG1C,WACEI,OAAOE,oBAAoB,UAAW1C,KAAKoC,iB,oBAmB7C,WACE,OAAOO,uBACL,qBAAK9C,UAAWC,IAAE8C,QAAS1B,QAASlB,KAAKsC,eAAzC,SACE,qBAAKzC,UAAWC,IAAEqC,MAAlB,SACE,qBAAKhB,IAAKnB,KAAKL,MAAMkD,SAAUzB,IAAI,SAGvCY,O,GArCctB,aAAdyB,EACGxB,aAAe,CACpBkC,SAAUjC,IAAUW,OAAOT,WAC3BI,QAASN,IAAUC,KAAKC,YAuCbqB,QCzCf,IAEeW,EAFE,CAAEC,SAJnB,SAAkBC,EAAWC,GAC3B,IAAMC,EAAG,UAHG,0BAGH,eAAqBF,EAArB,iBAAuCC,EAAvC,gBAJK,qCAIL,wDACT,OAAOE,MAAMD,GAAKE,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,iBCGhD,SAASC,EAAT,GAA2C,IAAzBC,EAAwB,EAAxBA,qBAKhB,OACE,wBAAQvD,KAAK,SAASJ,UAAWC,IAAEyD,OAAQrC,QAASsC,EAApD,uBAMJD,EAAOjC,UAAY,CACjBkC,qBAAsB5C,IAAUC,KAAKC,YAGxByC,Q,yBCXTE,E,4MACJ3E,MAAQ,CACN4E,KAAM,EACNC,MAAO,KACPlC,KAAM,GACNmC,WAAW,EACXf,SAAU,GACVgB,OAAQ,Q,EAuCVC,UAAY,WACV,EAAK5E,SAAS,CACZwE,KAAM,EACNjC,KAAM,GACNmC,WAAW,EACXC,OAAQ,U,EAKZE,iBAAmB,SAACJ,GAElB,EAAKG,YACL,EAAK5E,SAAS,CAAEyE,W,EAIlBH,qBAAuB,WACrBhE,QAAQC,IAAI,wHAEZ+C,OAAOwB,SAAS,CACdC,IAAKhC,SAASiC,gBAAgBC,aAC9BC,SAAU,WAGZ,EAAKlF,UAAS,kBAAe,CAC3BwE,KADY,EAAGA,KACF,O,EAMjBhC,eAAiB,SAACzC,GAEhB,IAAMoF,EAAcpF,EAAEE,cAAciC,IACpC5B,QAAQC,IAAI4E,GACZ,EAAKnF,SAAS,CAAE0E,WAAW,EAAMf,SAAUwB,IAE3C7E,QAAQC,IAAI,EAAKX,MAAM+D,UACvBrD,QAAQC,IAAI,U,EAGd6E,YAAc,WACZ,EAAKpF,UAAS,kBAAoB,CAAE0E,WAAtB,EAAGA,e,wDA9EnB,SAAmBW,EAAWC,GAAY,IAAD,OACvChC,OAAOwB,SAAS,CACdC,IAAKhC,SAASiC,gBAAgBC,aAC9BC,SAAU,WAGZ,IAAMK,EAAYD,EAAUb,MACtBX,EAAYhD,KAAKlB,MAAM6E,MAEvBe,EAAWF,EAAUd,KACrBT,EAAWjD,KAAKlB,MAAM4E,KAExBgB,IAAazB,GAAYwB,IAAczB,IACzChD,KAAKd,SAAS,CAAE2E,OAAQ,YACxBrE,QAAQC,IAAIO,KAAKlB,MAAM4E,MAEvBiB,EAAI5B,SAASC,EAAWC,GAAUG,MAAK,YAAe,IAAZwB,EAAW,EAAXA,KAExC,EAAK1F,UAAS,SAACsF,GAAD,MAAgB,CAC5B/C,KAAK,GAAD,mBACC+C,EAAU/C,MADX,YAECmD,EAAKjD,KAAI,kBAA0C,CACpDC,GADU,EAAGA,GAEbZ,aAFU,EAAOA,aAGjBC,cAHU,EAAqBA,2BASvCjB,KAAKd,SAAS,CAAE2E,OAAQ,gB,oBAmD5B,WACE,MAAoC7D,KAAKlB,MAAjC2C,EAAR,EAAQA,KAAMoC,EAAd,EAAcA,OAAQD,EAAtB,EAAsBA,UAEtB,OACE,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,CAAWD,SAAUI,KAAK+D,mBAEd,SAAXF,GAAqB,qDAEV,aAAXA,GACC,cAAC,EAAD,CAAcpC,KAAMA,EAAMC,eAAgB1B,KAAK0B,iBAGhDD,EAAKoD,QAAU,IACd,cAAC,EAAD,CAAQrB,qBAAsBxD,KAAKwD,uBAGzB,YAAXK,GACC,cAAC,IAAD,CACE5D,KAAK,OACL6E,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAIZrB,GACC,cAAC,EAAD,CAAOf,SAAU7C,KAAKlB,MAAM+D,SAAU3B,QAASlB,KAAKsE,qB,GAxH5C5D,aA+HH+C,IChIAyB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3D,SAAS4D,eAAe,SAM1BX,K,kBCfAvG,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,mCAAmC,eAAiB,qC","file":"static/js/main.aa5b3fab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1IXvP\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__2y_xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__jYoJD\",\"Modal\":\"Modal_Modal__cgVvB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2X3co\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1JNX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2VZWC\"};","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Searchbar.module.css\";\n\nclass Searchbar extends Component {\n  static defaultProps = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    search: \"\",\n  };\n\n  // Контролируем изминения запроса в инпуте и делаем нечуствительным к регистру (приводим к нижнему регистру)\n  handleChange = (e) => {\n    this.setState({\n      search: e.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  // Сабмит формы\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { search } = this.state;\n    console.log(search);\n\n    // Если пустая строка запрос не передаем\n    if (search.trim() === \"\") {\n      console.log(\"Пустая строка\");\n      return;\n    }\n\n    // Передаем результат запроса в App.js\n    this.props.onSubmit(search);\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            name=\"search\"\n            value={this.state.search}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nfunction ImageGalleryItem({ webformatURL, largeImageURL, onClick }) {\n  return (\n    <img\n      src={webformatURL}\n      alt={largeImageURL}\n      className={s.ImageGalleryItemImage}\n      onClick={onClick}\n    />\n  );\n}\n\nImageGalleryItem.prototype = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n\n//\n","import PropTypes from \"prop-types\";\nimport s from \"./ImageGallery.module.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n// import Button from \"../Button\";\n//Лоадер\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Loader from \"react-loader-spinner\";\n\nfunction ImageGallery({ data, handleClickImg }) {\n  console.log(data);\n  return (\n    <div>\n      <ul className={s.ImageGallery}>\n        {data.map(({ id, webformatURL, largeImageURL }) => (\n          <li key={id} className={s.ImageGalleryItem}>\n            <ImageGalleryItem\n              webformatURL={webformatURL}\n              largeImageURL={largeImageURL}\n              onClick={handleClickImg}\n            />\n          </li>\n        ))}\n      </ul>\n\n      {/* {data.length >= 12 && (\n        <Button handleButtonLoadMore={handleButtonLoadMore} />\n      )} */}\n    </div>\n  );\n}\n\nImageGallery.prototype = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  handleClickImg: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n\n///////////////////////////////////////////////////////////////////////////\n\n// import { Component } from \"react\";\n// import PropTypes from \"prop-types\";\n// import s from \"./ImageGallery.module.css\";\n// import ImageGalleryItem from \"../ImageGalleryItem\";\n// import Button from \"../Button\";\n// //Лоадер\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n// import Loader from \"react-loader-spinner\";\n\n// const API_KEY = \"23052937-32fb9bd6f4b84b12682be3748\";\n// const BASE_URL = `https://pixabay.com/api`;\n\n// class ImageGallery extends Component {\n//   static defaultProps = {\n//     query: PropTypes.string.isRequired,\n//     page: PropTypes.number.isRequired,\n//     onClick: PropTypes.func.isRequired,\n//   };\n//   state = {\n//     page: 1,\n//     data: [],\n\n//     // error: null,\n//     status: \"idle\",\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevQuery = prevProps.query;\n//     const nextQuery = this.props.query;\n\n//     // const prevPage = prevProps.page;\n//     // const nextPage = this.props.page;\n\n//     const prevPage = prevState.page;\n//     const nextPage = this.state.page;\n//     console.log(prevPage);\n//     console.log(nextPage);\n//     console.log(this.props.page);\n\n//     const url = `${BASE_URL}/?q=${nextQuery}&page=${nextPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n//     // const url2 = `${BASE_URL}/?q=${nextQuery}&page=${this.props.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n\n//     if (prevQuery !== nextQuery) {\n//       this.setState({ page: this.props.page, status: \"pending\" });\n\n//       fetch(url)\n//         .then((response) => response.json())\n//         .then(({ hits }) => {\n//           console.log(hits);\n//           this.setState({ data: hits, status: \"resolved\" });\n//         })\n//         .catch((error) => this.setState({ error }));\n//       return;\n//     }\n\n//     if (prevPage !== nextPage && prevQuery === nextQuery) {\n//       this.setState({ page: nextPage, status: \"pending\" });\n\n//       fetch(url)\n//         .then((response) => response.json())\n//         .then(({ hits }) => {\n//           console.log(hits);\n//           this.setState((prevState) => ({\n//             data: [...prevState.data, ...hits],\n//             status: \"resolved\",\n//           }));\n//         })\n//         .catch((error) => this.setState({ error }));\n//       return;\n//     }\n//   }\n\n//   handleButtonLoadMore = () => {\n//     console.log(\"Кнопка показать болше\");\n//     console.log(this.state.page);\n\n//     this.setState(({ page }) => ({\n//       page: page + 1,\n//     }));\n//     console.log(this.state.page);\n//   };\n//   //////////////\n\n//   // handleClickImg = (e) => {\n//   //   console.log(e.currentTarget.alt);\n//   //   console.log(\"Modal\");\n//   // };\n\n//   render() {\n//     /////////////////////\n//     // window.scrollTo({\n//     //   top: document.documentElement.scrollHeight,\n//     //   behavior: \"smooth\",\n//     // });\n//     /////////////////\n//     const { data, status } = this.state;\n\n//     console.log(data.length);\n\n//     if (status === \"idle\") {\n//       return <h2>Enter your request.</h2>;\n//     }\n\n//     if (status === \"pending\") {\n//       return (\n//         <Loader\n//           type=\"Puff\"\n//           color=\"#00BFFF\"\n//           height={100}\n//           width={100}\n//           timeout={3000} //3 secs\n//         />\n//       );\n//     }\n\n//     if (status === \"resolved\") {\n//       return (\n//         <div>\n//           <ul className={s.ImageGallery}>\n//             {data.map(({ id, webformatURL, largeImageURL }) => (\n//               <li key={id} className={s.ImageGalleryItem}>\n//                 <ImageGalleryItem\n//                   webformatURL={webformatURL}\n//                   largeImageURL={largeImageURL}\n//                   onClick={this.props.onClick}\n//                 />\n//               </li>\n//             ))}\n//           </ul>\n\n//           {data.length >= 12 && (\n//             <Button handleButtonLoadMore={this.handleButtonLoadMore} />\n//           )}\n//         </div>\n//       );\n//     }\n//   }\n// }\n\n// export default ImageGallery;\n","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Modal.module.css\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\nclass Modal extends Component {\n  static defaultProps = {\n    largeImg: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      console.log(\"Нажали Escape\");\n\n      this.props.onClick();\n    }\n  };\n\n  handleBackdrop = (e) => {\n    if (e.currentTarget === e.target) {\n      console.log(\"Нажали Backdrop\");\n\n      this.props.onClick();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdrop}>\n        <div className={s.Modal}>\n          <img src={this.props.largeImg} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","const API_KEY = \"23052937-32fb9bd6f4b84b12682be3748\";\r\nconst BASE_URL = `https://pixabay.com/api`;\r\n\r\nfunction fetchApi(nextQuery, nextPage) {\r\n  const url = `${BASE_URL}/?q=${nextQuery}&page=${nextPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(url).then((response) => response.json());\r\n}\r\nconst apiFirst = { fetchApi };\r\n\r\nexport default apiFirst;\r\n","// window.scrollTo({\r\n//   top: document.documentElement.scrollHeight,\r\n//   behavior: \"smooth\",\r\n// });\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Button.module.css\";\r\n\r\nfunction Button({ handleButtonLoadMore }) {\r\n  // window.scrollTo({\r\n  //   top: document.documentElement.scrollHeight,\r\n  //   behavior: \"smooth\",\r\n  // });\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={handleButtonLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.prototype = {\r\n  handleButtonLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import \"./App.css\";\r\nimport { Component } from \"react\";\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport ImageGallery from \"./components/ImageGallery\";\r\nimport Modal from \"./components/Modal\";\r\nimport API from \"./components/services/img-api\";\r\nimport Button from \"./components/Button\";\r\n//Лоадер\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n// const API_KEY = \"23052937-32fb9bd6f4b84b12682be3748\";\r\n// const BASE_URL = `https://pixabay.com/api`;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    page: 1,\r\n    query: null,\r\n    data: [],\r\n    showModal: false,\r\n    largeImg: \"\",\r\n    status: \"idle\",\r\n    // error: null,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    const prevQuery = prevState.query;\r\n    const nextQuery = this.state.query;\r\n\r\n    const prevPage = prevState.page;\r\n    const nextPage = this.state.page;\r\n\r\n    if (prevPage !== nextPage || prevQuery !== nextQuery) {\r\n      this.setState({ status: \"pending\" });\r\n      console.log(this.state.page);\r\n\r\n      API.fetchApi(nextQuery, nextPage).then(({ hits }) => {\r\n        // console.log(hits);\r\n        this.setState((prevState) => ({\r\n          data: [\r\n            ...prevState.data,\r\n            ...hits.map(({ id, webformatURL, largeImageURL }) => ({\r\n              id,\r\n              webformatURL,\r\n              largeImageURL,\r\n            })),\r\n          ],\r\n          // status: \"resolved\",\r\n        }));\r\n      });\r\n      this.setState({ status: \"resolved\" });\r\n    }\r\n  }\r\n\r\n  // Сброс страницы в 1\r\n  resetPage = () => {\r\n    this.setState({\r\n      page: 1,\r\n      data: [],\r\n      showModal: false,\r\n      status: \"idle\",\r\n    });\r\n  };\r\n\r\n  // Запрос пользователя по поиску\r\n  handleFormSubmit = (query) => {\r\n    // console.log(query);\r\n    this.resetPage();\r\n    this.setState({ query });\r\n  };\r\n\r\n  // Кнопка показать еще\r\n  handleButtonLoadMore = () => {\r\n    console.log(\"Кнопка показать болше\");\r\n    // console.log(this.state.page);\r\n    window.scrollTo({\r\n      top: document.documentElement.scrollHeight,\r\n      behavior: \"smooth\",\r\n    });\r\n\r\n    this.setState(({ page }) => ({\r\n      page: page + 1,\r\n    }));\r\n    // console.log(this.state.page);\r\n  };\r\n\r\n  // По клику на картинку открывается модалка с большим изображением\r\n  handleClickImg = (e) => {\r\n    // console.log(this.state.largeImg);\r\n    const imgForModal = e.currentTarget.alt;\r\n    console.log(imgForModal);\r\n    this.setState({ showModal: true, largeImg: imgForModal });\r\n    // console.log(e.currentTarget.alt);\r\n    console.log(this.state.largeImg);\r\n    console.log(\"Modal\");\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n  };\r\n\r\n  render() {\r\n    const { data, status, showModal } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <Searchbar onSubmit={this.handleFormSubmit} />\r\n\r\n        {status === \"idle\" && <h2>Enter your request.</h2>}\r\n\r\n        {status === \"resolved\" && (\r\n          <ImageGallery data={data} handleClickImg={this.handleClickImg} />\r\n        )}\r\n\r\n        {data.length >= 12 && (\r\n          <Button handleButtonLoadMore={this.handleButtonLoadMore} />\r\n        )}\r\n\r\n        {status === \"pending\" && (\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n          />\r\n        )}\r\n\r\n        {showModal && (\r\n          <Modal largeImg={this.state.largeImg} onClick={this.toggleModal} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// const url = `${BASE_URL}/?q=${nextQuery}&page=${nextPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n\r\n// if (prevQuery !== nextQuery) {\r\n//   this.resetPage();\r\n//   console.log(this.state.page);\r\n//   // console.log(this.state.data);\r\n\r\n//   if (nextPage === 1) {\r\n//     this.setState({ status: \"pending\" });\r\n//     APIfirst.fetchFirstLoader(nextQuery, nextPage).then(({ hits }) => {\r\n//       this.setState({\r\n//         data: hits.map(({ id, webformatURL, largeImageURL }) => ({\r\n//           id,\r\n//           webformatURL,\r\n//           largeImageURL,\r\n//         })),\r\n//         status: \"resolved\",\r\n//       });\r\n//     });\r\n//   }\r\n// }\r\n\r\n/////////////////////////\r\n\r\n/////////////////\r\n\r\n// fetch(url)\r\n//   .then((response) => response.json())\r\n//   .then(({ hits }) => {\r\n//     this.setState({ data: hits, status: \"resolved\" });\r\n//   });\r\n// // .catch((error) =>  this.setState({ error }));\r\n\r\n// fetch(url)\r\n//   .then((response) => response.json())\r\n//   .then(({ hits }) => {\r\n//     // console.log(hits);\r\n//     this.setState((prevState) => ({\r\n//       data: [...prevState.data, ...hits],\r\n//       status: \"resolved\",\r\n//     }));\r\n//   });\r\n// .catch((error) => this.setState({ error }));\r\n\r\n// import \"./App.css\";\r\n// import { Component } from \"react\";\r\n// import Searchbar from \"./components/Searchbar\";\r\n// import ImageGallery from \"./components/ImageGallery\";\r\n// import Modal from \"./components/Modal\";\r\n// // import Button from \"./components/Button\";\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     page: \"\",\r\n//     query: null,\r\n//     showModal: false,\r\n//     largeImg: \"\",\r\n//   };\r\n\r\n//   handleFormSubmit = (query, page) => {\r\n//     console.log(query, page);\r\n//     this.setState({ query, page });\r\n//   };\r\n\r\n//   handleClickImg = (e) => {\r\n//     // console.log(this.state.largeImg);\r\n//     const imgForModal = e.currentTarget.alt;\r\n//     console.log(imgForModal);\r\n//     this.setState({ showModal: true, largeImg: imgForModal });\r\n//     // console.log(e.currentTarget.alt);\r\n//     console.log(this.state.largeImg);\r\n//     console.log(\"Modal\");\r\n//   };\r\n\r\n//   toggleModal = () => {\r\n//     this.setState(({ showModal }) => ({ showModal: !showModal }));\r\n//   };\r\n\r\n//   ////////////////\r\n//   // handleButtonLoadMore = () => {\r\n//   //   console.log(\"Кнопка показать болше\");\r\n\r\n//   //   this.setState((prevState) => ({\r\n//   //     page: prevState.page + 1,\r\n//   //   }));\r\n//   //   console.log(this.state.page);\r\n//   // };\r\n//   ///////////\r\n\r\n//   render() {\r\n//     const { query, page, showModal } = this.state;\r\n\r\n//     return (\r\n//       <div className=\"App\">\r\n//         <Searchbar onSubmit={this.handleFormSubmit} />\r\n\r\n//         <ImageGallery\r\n//           query={query}\r\n//           page={page}\r\n//           onClick={this.handleClickImg}\r\n//           // handleButtonLoadMore={this.handleButtonLoadMore}\r\n//         />\r\n\r\n//         {showModal && (\r\n//           <Modal largeImg={this.state.largeImg} onClick={this.toggleModal} />\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1OML6\",\"SearchForm\":\"Searchbar_SearchForm__3zqXk\",\"SearchFormButton\":\"Searchbar_SearchFormButton__33tHH\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1A0H8\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1pdGi\",\"SearchFormIput\":\"Searchbar_SearchFormIput__1QSbc\"};"],"sourceRoot":""}